/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.5
 * Generated at: 2023-03-06 11:02:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("    <title>OldEgg | Log In</title>\r\n");
      out.write("    <link rel=\"icon\" type=\"image/x-icon\" href=\"./images/oldegg-icon.png\" />\r\n");
      out.write("    <link\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    />\r\n");
      out.write("    <link href=\"./style/style.css\" rel=\"stylesheet\" />\r\n");
      out.write("  </head>\r\n");
      out.write("  <body class=\"bg_default\">\r\n");
      out.write("    <div class=\"d-flex\">\r\n");
      out.write("      <img\r\n");
      out.write("        class=\"flex-fill w-50 vh-100\"\r\n");
      out.write("        style=\"object-fit: cover; object-position: bottom\"\r\n");
      out.write("        src=\"./images/andre_tan_setup.jpg\"\r\n");
      out.write("      />\r\n");
      out.write("\r\n");
      out.write("      <div class=\"flex-fill align-self-center container w-50\">\r\n");
      out.write("        <div class=\"row pb-4\">\r\n");
      out.write("          <div class=\"col\"></div>\r\n");
      out.write("          <div class=\"col\">\r\n");
      out.write("            <a href=\"index.html\">\r\n");
      out.write("              <img src=\"./images/oldegg-icon.png\" width=\"200px\" />\r\n");
      out.write("            </a>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row pb-4\">\r\n");
      out.write("          <div class=\"col-3\"></div>\r\n");
      out.write("          <div class=\"col-6\">\r\n");
      out.write("            <h2>Login</h2>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <form method=\"get\" action=\"login\">\r\n");
      out.write("          <div class=\"form-group pb-3\">\r\n");
      out.write("            <div class=\"form-row row\">\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("              <div class=\"col-6\">\r\n");
      out.write("                <label for=\"inputEmail\"><h7>Email</h7></label>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-row row\">\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("              <div class=\"col-6\">\r\n");
      out.write("                <input\r\n");
      out.write("                  type=\"email\"\r\n");
      out.write("                  class=\"form-control\"\r\n");
      out.write("                  id=\"inputEmail\"\r\n");
      out.write("                  placeholder=\"example@example.com\"\r\n");
      out.write("                  name=\"email\"\r\n");
      out.write("                  required\r\n");
      out.write("                />\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"form-group pb-4\">\r\n");
      out.write("            <div class=\"form-row row\">\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("              <div class=\"col-6\">\r\n");
      out.write("                <label for=\"inputPassword\"><h7>Password</h7></label>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-row row\">\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("              <div class=\"col-6\">\r\n");
      out.write("                <input\r\n");
      out.write("                  type=\"text\"\r\n");
      out.write("                  class=\"form-control\"\r\n");
      out.write("                  id=\"inputPassword\"\r\n");
      out.write("                  placeholder=\"***********\"\r\n");
      out.write("                  name=\"password\"\r\n");
      out.write("                  required\r\n");
      out.write("                />\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"col-3\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("            <div class=\"col-6\">\r\n");
      out.write("              ");
 if(request.getParameter("data") != null) { 
      out.write("\r\n");
      out.write("              <p style=\"color: red\">");
      out.print( request.getParameter("data") );
      out.write("</p>\r\n");
      out.write("              ");
} else{
      out.write("\r\n");
      out.write("              <p></p>\r\n");
      out.write("              ");
} 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <div class=\"col-3\"></div>\r\n");
      out.write("            <div class=\"col-2\">\r\n");
      out.write("              <button type=\"submit\" id=\"\" class=\"btn bg_orange\">Sign in</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-2\">\r\n");
      out.write("              <button class=\"btn\">\r\n");
      out.write("                <a class=\"underline\" href=\"signup.jsp\">Sign Up</a>\r\n");
      out.write("              </button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col\"></div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("      integrity=\"sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    ></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
